{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/component/sphere/sphere.component.ts","webpack:///src/app/component/sphere/sphere.component.html","webpack:///src/app/model/githubuser.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","headers","append","request","Object","map","key","url","setHeaders","get","params","value","post","put","delete","providedIn","AppComponent","httpService","toastr","spinner","displayedColumns","dataSource","getGithubData","user","show","findAll","subscribe","result","setTimeout","paginator","sort","hide","error","status","timeOut","positionClass","selector","templateUrl","styleUrls","AppModule","forRoot","preventDuplicates","declarations","imports","providers","bootstrap","AppService","apiService","github","pipe","resp","res","name","private","html_url","description","language","SphereComponent","GithubUser","isPrivate","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private headers: HttpHeaders = new HttpHeaders().append('Content-Type', 'application/json');\r\n  private request: HttpParams = new HttpParams();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private setHeaders(request?): void {\r\n    if (request) {\r\n      this.request = {} as HttpParams;\r\n      Object.keys(request).map(key => {\r\n        this.request.append(key, request[key]);\r\n      });\r\n    }\r\n  }\r\n\r\n  public get(url: string, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.get<any>(url, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public post(url: string, value: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.post<any>(url, value, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public put(url: string, id: any, value: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.put(`${url}/${id}`, value, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public delete(url: string, id: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.delete(`${url}/${id}`, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { GithubUser } from './model/githubuser';\r\nimport { AppService } from './app.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  public displayedColumns: string[] = ['project', 'isPrivate', 'url', 'description', 'language'];\r\n  public dataSource = new MatTableDataSource<GithubUser>();\r\n\r\n  constructor(\r\n    private httpService: AppService,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getGithubData('dustanisci');\r\n  }\r\n\r\n  public getGithubData(user: string): void {\r\n    this.spinner.show();\r\n    this.httpService.findAll(user).subscribe((result: GithubUser[]) => {\r\n      this.dataSource = new MatTableDataSource<GithubUser>(result);\r\n      setTimeout(() => this.dataSource.paginator = this.paginator);\r\n      setTimeout(() => this.dataSource.sort = this.sort);\r\n      this.spinner.hide();\r\n    },\r\n      (error: HttpErrorResponse) => {\r\n        this.toastr.error(\r\n          error.status === 404 ? 'User Not Found' :\r\n            error.status === 403 ? 'Exceeded the limit. Try it in an hour.' : 'Unable To Load', null,\r\n          {\r\n            timeOut: 1500,\r\n            positionClass: 'toast-top-right',\r\n          });\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"grid-level1\">\r\n  <div class=\"grid-level2\">\r\n    <app-sphere class=\"sphere-top\"></app-sphere>\r\n    <main class=\"grid-level3\">\r\n\r\n      <div class=\"search\">\r\n        <label>Search for a github user account</label>\r\n        <div class=\"input-button\">\r\n          <mat-form-field>\r\n            <input #inputUserId matInput placeholder=\"User ID\" value=\"dustanisci\" (keyup.enter)=\"getGithubData(inputUserId.value)\">\r\n          </mat-form-field>\r\n          <button (click)=\"getGithubData(inputUserId.value)\">Search</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-table-github\" *ngIf=\"dataSource.data.length\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"language\" matSortDirection=\"desc\" matSortDisableClear>\r\n          <ng-container matColumnDef=\"project\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Project </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"isPrivate\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Private </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.isPrivate}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"url\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> URL </th>\r\n            <td mat-cell *matCellDef=\"let element\"> <a [href]=\"element.url\" target=\"_blank\">{{element.url}}</a></td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"language\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.language}} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n          </tr>\r\n        </table>\r\n        <mat-paginator [pageSize]=\"6\" [hidePageSize]=\"true\" showFirstLastButtons></mat-paginator>\r\n        <ngx-spinner bdOpacity=0.9 bdColor=\"rgba(255, 255, 255, 0.8)\" size=\"medium\" color=\"#fff\" type=\"square-loader\"\r\n          [fullScreen]=\"false\">\r\n          Loading...\r\n        </ngx-spinner>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</div>\r\n\r\n<img src=\"./assets/img/github.png\">\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { AppService } from './app.service';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { SphereComponent } from './component/sphere/sphere.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SphereComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    NgxSpinnerModule,\r\n    ToastrModule.forRoot({\r\n      preventDuplicates: true\r\n    })\r\n  ],\r\n  providers: [\r\n    AppService,\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GithubUser } from './model/githubuser';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from './../environments/environment';\r\nimport { ApiService } from './api/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  public findAll(user: string): Observable<GithubUser[]> {\r\n    return this.apiService.get(`${environment.github}/${user}/repos`).pipe(map(resp => resp.map(res => {\r\n      return new GithubUser(\r\n        res.name,\r\n        res.private,\r\n        res.html_url,\r\n        res.description,\r\n        res.language\r\n      );\r\n    })));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sphere',\r\n  templateUrl: './sphere.component.html',\r\n  styleUrls: ['./sphere.component.scss']\r\n})\r\nexport class SphereComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div></div>","export interface IGithubUser {\r\n    name: string;\r\n    private: boolean;\r\n    html_url: string;\r\n    description: string;\r\n    language: string;\r\n}\r\n\r\nexport class GithubUser {\r\n    name: string;\r\n    isPrivate: boolean;\r\n    url: string;\r\n    description: string;\r\n    language: string;\r\n\r\n    constructor(name: string, isPrivate: boolean, url: string, description: string, language: string) {\r\n        this.name = name;\r\n        this.isPrivate = isPrivate;\r\n        this.url = url;\r\n        this.description = description;\r\n        this.language = language;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  github : 'https://api.github.com/users',\r\n};\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}